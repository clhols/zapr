apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 26
    buildToolsVersion rootProject.buildToolsVersion

    flavorDimensions "app"

    if(project.hasProperty("devBuild")) {
        aaptOptions.cruncherEnabled = false
    }

    defaultConfig {
        applicationId "dk.youtec.zapr"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode getVersionCodeTimestamp()
        versionName "0.1"

        vectorDrawables.useSupportLibrary = true

        resConfigs "en", "da"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'com.google.android.exoplayer:exoplayer:r2.4.2'
    //implementation project(':exoplayer-lib')
    //implementation project(':exoplayer-library')

    implementation 'org.jetbrains.anko:anko-sdk15:0.10.1'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
}

play {
    serviceAccountEmail = 'dummy@developer.gserviceaccount.com'
    pk12File = file('service-account-key.json')

    track = 'alpha' // 'production', 'beta' or 'alpha'
}

def releasePropertiesFile = rootProject.file("release.properties")
if (releasePropertiesFile.exists()) {
    def props = new Properties()
    props.load(new FileInputStream(rootProject.file("release.properties")))
    android.signingConfigs.release.storeFile rootProject.file(System.properties['user.home'] + props.keyStore)
    android.signingConfigs.release.storePassword props.keyStorePassword
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.keyPassword props.keyAliasPassword
}

def getVersionCodeTimestamp() {
    //if(project.hasProperty("devBuild")) return 1

    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    def code = formattedDate.toInteger()
    return code
}
